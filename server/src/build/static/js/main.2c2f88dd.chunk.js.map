{"version":3,"sources":["assets/lemon.png","assets/banana.png","assets/cherry.png","assets/apple.png","store/store.js","store/reducers.js","store/actions.js","components/Navbar.js","components/Header.js","components/CountryResults.js","components/QuestionOneTwo.js","components/QuestionThree.js","components/QuestionFour.js","pages/Question.js","pages/NotFoundPage.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducers","slotResults","state","action","type","payload","number","rootReducer","combineReducers","Navbar","className","to","id","Header","title","text","CountryResults","countryInformation","QuestionOneTwo","questionNumber","useState","setCountryInformation","countryName","setCountryName","defaultStatement","setDefaultStatement","useEffect","searchCountry","a","console","log","trim","url","fetch","result","json","body","message","countries","i","length","languages","map","language","name","currencies","currency","symbol","country","capital","alternateNames","altSpellings","join","population","image","flag","push","value","onChange","event","target","placeholder","onClick","index","key","src","QuestionThree","setCountries","filteredCountries","setFilteredCountries","fetchData","results","filter","toLowerCase","includes","fruit","lemon","require","banana","cherry","apple","connect","dispatch","updateResult","updateSlotResult","reels","setReels","images","setImages","allFruitImages","setAllFruitImages","winningCoins","setWinningCoins","document","getElementById","classList","remove","newImages","Math","floor","random","adjacentFruits","findAdjacent","winningPoints","Object","keys","adjacentFruit","disabled","Question","match","params","getText","getQuestion","NotFoundPage","HomePage","style","fontSize","border","width","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","store","createStore","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2c2f88dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lemon.ba1d1037.png\";","module.exports = __webpack_public_path__ + \"static/media/banana.d03ee2b9.png\";","module.exports = __webpack_public_path__ + \"static/media/cherry.a99f80f0.png\";","module.exports = __webpack_public_path__ + \"static/media/apple.d2d5ddb0.png\";","import { createStore, combineReducers } from 'redux';\r\nimport { slotResults } from './reducers';\r\n \r\nconst reducers = {\r\n    slotResults,\r\n};\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const configureStore = () => createStore(rootReducer);","import { UPDATE_SLOT_RESULT } from './actions'\r\nexport const  slotResults = (state = 20, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case UPDATE_SLOT_RESULT: {\r\n            const { number } = payload;\r\n            return state+=number;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","export const UPDATE_SLOT_RESULT = 'UPDATE_SLOT_RESULT';\r\nexport const updateSlotResult = number => ({\r\n    type: UPDATE_SLOT_RESULT,\r\n    payload: { number },\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark dark-color\">\r\n        <Link className=\"navbar-brand navbar-title\" to=\"/\">My Assignment</Link>    \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/question/1\">Question 1</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/question/2\">Question 2</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/question/3\">Question 3</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/question/4\">Question 4</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n)\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Header = ({title, text}) => (\r\n    <div className=\"header text-align-center\">\r\n        <h1 className=\"font-weight-bold mb-2\">{title}</h1>\r\n        <hr/>\r\n        <p>{text}</p>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CountryResults = ({countryInformation}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header font-weight-bold\">\r\n                Result\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {countryInformation}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryResults;","import React, {useState, useEffect} from 'react';\r\nimport CountryResults from './CountryResults';\r\n\r\nconst QuestionOneTwo = ({questionNumber}) => {\r\n    // QUESTION NUMBER (1 OR 2) - SINCE THEY USE PRACTICALLY THE SAME TEMPLATE\r\n    const number = questionNumber;\r\n    \r\n    // SET COUNTRY\r\n    const [countryInformation, setCountryInformation] = useState([]);\r\n    const [countryName, setCountryName] = useState('');\r\n    const [defaultStatement, setDefaultStatement] = useState('');\r\n\r\n    // CLEAR ALL ENTRIES\r\n    useEffect(() => {\r\n        setCountryInformation([]);\r\n        setCountryName('');\r\n        setDefaultStatement('Nothing to show.');\r\n    }, [number]);\r\n\r\n    const searchCountry = async () => {\r\n        console.log(countryName);\r\n        if(countryName.trim() === ''){            \r\n            setDefaultStatement('Please insert a country name!');\r\n            setCountryInformation([]);\r\n        } else {\r\n            var url = ``;\r\n            if(number === '1'){\r\n                url = `/api/country/fullname/${countryName}/true`\r\n            } else if(number === '2'){\r\n                url = `/api/country/fullname/${countryName}/false`\r\n            }\r\n            const result = await fetch(url);\r\n            const body = await result.json();\r\n            // setCountryInformation('Could not find country!')\r\n            if (typeof body.message == 'undefined') {\r\n                var countries = [];\r\n                for(var i = 0; i<body.length; i++){\r\n                    var languages = body[i].languages.map((language) => {\r\n                        return language.name;\r\n                    });\r\n                    var currencies = body[i].currencies.map((currency) => {\r\n                        return currency.name + ' (' + currency.symbol + ')';\r\n                    })\r\n                    var country = {\r\n                        name: body[i].name,\r\n                        capital: body[i].capital, \r\n                        alternateNames: body[i].altSpellings.join(', '),\r\n                        languages: languages.join(', '),\r\n                        population: body[i].population,\r\n                        currencies: currencies.join(', '),\r\n                        image: body[i].flag\r\n                    }\r\n                    countries.push(country);\r\n                }\r\n                setCountryInformation(countries);\r\n            } else {\r\n                setCountryInformation([]);\r\n                setDefaultStatement('Country not found!');\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"form-group form-group-question\">\r\n                <label className=\"font-weight-bold\">Please enter country name below:</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col col-12 col-sm-12 col-md-9 mb-2\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={countryName} \r\n                            onChange={(event) => setCountryName(event.target.value)} \r\n                            placeholder=\"Country Name\"/>\r\n                    </div>\r\n                    <div className=\"col col-12 col-sm-12 col-md-3 mb-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary w-100\" onClick={()=>searchCountry()}>Search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                countryInformation.length > 0 ? (\r\n                    <CountryResults countryInformation={\r\n                        countryInformation.map((country, index) => (                            \r\n                            <div key={country.name}>\r\n                                <div className=\"row mb-2\">\r\n                                    <div key={country.name + '-col-1'} className=\"col col-md-8\">\r\n                                        <h5 className=\"font-weight-bold underline\">{country.name}</h5>\r\n                                        <p className=\"results-paragraph\"><strong>Alternate Names:</strong> {country.alternateNames}</p>\r\n                                        <p className=\"results-paragraph\"><strong>Capital:</strong> {country.capital}</p>\r\n                                        <p className=\"results-paragraph\"><strong>Currencies:</strong> {country.currencies}</p>\r\n                                        <p className=\"results-paragraph\"><strong>Languages:</strong> {country.languages}</p>\r\n                                        <p className=\"results-paragraph\"><strong>Population:</strong> {country.population}</p>\r\n                                    </div>\r\n                                    <div key={country.name + '-col-2'} className=\"col col-md-4\">\r\n                                        <img className=\"w-100 border\" src={country.image}/>\r\n                                    </div>\r\n                                </div>\r\n                                {index !== countryInformation.length-1 ? <hr key={index}/> : '' }\r\n                            </div>\r\n                        ))\r\n                    }/>\r\n                ) : (\r\n                    <CountryResults countryInformation={\r\n                        <span>{defaultStatement}</span>\r\n                    }/>\r\n                )\r\n            }   \r\n        </>\r\n    )\r\n};\r\n\r\nexport default QuestionOneTwo;","import React, {useState, useEffect} from 'react';\r\nimport CountryResults from './CountryResults';\r\n\r\nconst QuestionThree = () => {\r\n    // SET COUNTRIES AND FILTER NAME\r\n    const [countries, setCountries] = useState([]);\r\n    const [countryName, setCountryName] = useState('');\r\n    const [filteredCountries, setFilteredCountries] = useState([]);\r\n\r\n    // GET ALL COUNTRIES\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/country/all`);\r\n            const body = await result.json();\r\n            setCountries(body);   \r\n            setFilteredCountries(body);        \r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // FILTER COUNTRIES\r\n    useEffect(() => {\r\n        const results = countries.filter(country =>\r\n            country.name.toLowerCase().includes(countryName.toLowerCase().trim())\r\n        );\r\n        setFilteredCountries(results);\r\n    }, [countryName]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group form-group-question mb-4\">\r\n                <label className=\"font-weight-bold\">Filter through the list of countries:</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col col-12\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={countryName} \r\n                            onChange={(event) => setCountryName(event.target.value)} \r\n                            placeholder=\"Insert Country Name\"/>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n            {\r\n                filteredCountries.length > 0 ? (\r\n                    <CountryResults countryInformation={\r\n                        filteredCountries.map((country) => (\r\n                            <span key={country.name} className=\"badge badge-pill badge-light custom-pill\">{country.name}</span>\r\n                        ))\r\n                    }/>\r\n                ) : (\r\n                    <CountryResults countryInformation={\r\n                        <span></span>\r\n                    }/>\r\n                )\r\n            }          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionThree;","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateSlotResult } from '../store/actions'\r\n\r\n// SET IMAGES \r\nconst lemon = require('../assets/lemon.png');\r\nconst banana = require('../assets/banana.png');\r\nconst cherry = require('../assets/cherry.png');\r\nconst apple = require('../assets/apple.png');\r\nconst fruit = { lemon, banana, cherry, apple }\r\n\r\nconst QuestionFour = ({ slotResults, updateResult }) => {\r\n    // SET REELS AND IMAGES\r\n    const [reels, setReels] = useState([]);\r\n    const [images, setImages] = useState([]);\r\n    const [allFruitImages, setAllFruitImages] = useState({});\r\n    const [winningCoins, setWinningCoins] = useState(0);\r\n\r\n    // SET REELS\r\n    useEffect(() => {\r\n        setReels([\r\n            [\"cherry\", \"lemon\", \"apple\", \"lemon\", \"banana\", \"banana\", \"lemon\", \"lemon\"],\r\n            [\"lemon\", \"apple\", \"lemon\", \"lemon\", \"cherry\", \"apple\", \"banana\", \"lemon\"],\r\n            [\"lemon\", \"apple\", \"lemon\", \"apple\", \"cherry\", \"lemon\", \"banana\", \"lemon\"]\r\n        ])\r\n\r\n        // DEFAULT IMAGES\r\n        setImages([fruit.lemon, fruit.apple, fruit.banana]);\r\n        setAllFruitImages([fruit.lemon, fruit.banana, fruit.cherry, fruit.apple]);\r\n    }, []);\r\n\r\n    // SPIN FUNCTION \r\n    function spin () {\r\n        if(slotResults > 0) {\r\n            document.getElementById('lost-coin').classList.remove(\"d-none\");\r\n            var result = [];\r\n            let newImages = [...allFruitImages];\r\n            for(var i = 0; i < reels.length; i++){\r\n                var fruit = reels[i][Math.floor(Math.random() * (reels[i].length))]\r\n                result.push(fruit);\r\n\r\n                // UPDATE IMAGES\r\n                switch(fruit){\r\n                    case 'lemon':\r\n                        newImages[i] = allFruitImages[0];\r\n                        break;\r\n                    case 'banana':\r\n                        newImages[i] = allFruitImages[1];\r\n                        break;\r\n                    case 'cherry':\r\n                        newImages[i] = allFruitImages[2];\r\n                        break;\r\n                    case 'apple':\r\n                        newImages[i] = allFruitImages[3];\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            setImages(newImages);\r\n            var adjacentFruits = findAdjacent(result);\r\n            var winningPoints = 0;\r\n            if(Object.keys(adjacentFruits).length > 0){\r\n                for(let adjacentFruit in adjacentFruits){\r\n                    switch(adjacentFruit){\r\n                        case 'cherry':\r\n                            if(adjacentFruits[adjacentFruit] == 2){\r\n                                winningPoints = 40;\r\n                            } \r\n                            else if (adjacentFruits[adjacentFruit] == 3) {\r\n                                winningPoints = 50;\r\n                            }\r\n                        break;\r\n                        case 'banana':\r\n                            if(adjacentFruits[adjacentFruit] == 2){\r\n                                winningPoints = 5;\r\n                            } \r\n                            else if (adjacentFruits[adjacentFruit] == 3) {\r\n                                winningPoints = 15;\r\n                            }\r\n                        break;\r\n                        case 'lemon':\r\n                            if (adjacentFruits[adjacentFruit] == 3) {\r\n                                winningPoints = 3;\r\n                            }\r\n                        break;\r\n                        case 'apple':\r\n                            if(adjacentFruits[adjacentFruit] == 2){\r\n                                winningPoints = 10;\r\n                            } \r\n                            else if (adjacentFruits[adjacentFruit] == 3) {\r\n                                winningPoints = 20;\r\n                            }\r\n                        break;\r\n                    }\r\n                    updateResult(winningPoints-1);\r\n                    setWinningCoins(winningPoints);\r\n                }\r\n            } else {\r\n                updateResult(-1);\r\n                setWinningCoins(0);\r\n            }\r\n        } else {\r\n            // DISABLE SPIN BUTTON\r\n            document.getElementById('spin-button').disabled = true;\r\n        }\r\n    } \r\n    \r\n    function findAdjacent(result){\r\n        const adjacentFruits = []\r\n        for(var i = 0; i < result.length; i++){\r\n            if(typeof(result[i + 1] !== 'undefined')){\r\n                if(result[i] == result[i+1]){\r\n                    if(typeof adjacentFruits[result[i]] == 'undefined') {\r\n                        adjacentFruits[result[i]] = 1;\r\n                    } \r\n                    adjacentFruits[result[i]] ++;\r\n                }\r\n            }\r\n        }\r\n        return adjacentFruits;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col col-12 col-md-12 col-lg-4 mb-2\">\r\n                <div className=\"card h-100\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold\">Rewards</h5>\r\n                        <hr/>\r\n                        <ul>\r\n                            <li>3 cherries in a row: won 50 coins</li>\r\n                            <li>2 cherries in a row: won 40 coins</li>\r\n                            <li>3 Apples in a row: won 20 coins</li>\r\n                            <li>2 Apples in a row: won 10 coins</li>\r\n                            <li>3 Bananas in a row: won 15 coins</li>\r\n                            <li>2 Bananas in a row: won 5 coins</li>\r\n                            <li>3 lemons in a row: won 3 coins</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col col-12 col-md-12 col-lg-8 mb-2\">\r\n                    <div className=\"d-flex mb-2\">\r\n                        <div className=\"p-2\">\r\n                            <span id=\"total-number-of-coins\">Number of coins: <strong>{slotResults}</strong></span>\r\n                            <span id=\"lost-coin\" className=\"badge badge-pill mx-2 badge-danger d-none\">- 1 coin</span>\r\n                            { winningCoins > 0 ? <span id=\"win-coin\" className=\"badge badge-pill badge-success\">+ {winningCoins} coins</span> : ''}\r\n                        </div>\r\n                        <div className=\"ml-auto p-2\"><button id=\"spin-button\" type=\"button\" className=\"btn btn-dark btn-sm\" onClick={spin}>Spin</button></div>\r\n                    </div>\r\n                    <div className=\"slots row\">\r\n                        <div className=\"col col-4 col-md-4\"><img className=\"slot-image\" src={images[0]}/></div>\r\n                        <div className=\"col col-4 col-md-4\"><img className=\"slot-image\" src={images[1]}/></div>\r\n                        <div className=\"col col-4 col-md-4\"><img className=\"slot-image\" src={images[2]}/></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    slotResults: state.slotResults,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateResult: number => dispatch(updateSlotResult(number))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionFour)","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport QuestionOneTwo from '../components/QuestionOneTwo';\r\nimport QuestionThree from '../components/QuestionThree';\r\nimport QuestionFour from '../components/QuestionFour';\r\n\r\nconst Question = ({ match }) => {\r\n    // SET HEADER\r\n    const number = match.params.number;\r\n    const title = \"Question \" + number;\r\n    \r\n    // SET HEADER TEXT\r\n    const getText = () => {\r\n        switch(number){\r\n            case '1': \r\n              return \"Write a function that connects to https://restcountries.eu/ and gets a unique country from a specific name given using the Node back end and send it to the front end.\";\r\n            case '2': \r\n              return \"Using the same API ( https://restcountries.eu/ ), and from an array of string, write a function that returns a list of countries where their name matches at least a part of one of these string use the Node back end and send it to the front end.\";\r\n            case '3': \r\n              return \"Using the same API ( https://restcountries.eu/ ) in the React front end list all the countries and a field to filter the country by name.\";\r\n            case '4': \r\n              return \"Slot Machine Question\";\r\n            default: \r\n              return '';\r\n          }\r\n    }\r\n    // SET TEMPLATE FOR QUESTION (QUESTIONS 1 AND 2 USE THE SAME TEMPLATE)\r\n    const getQuestion = () => {\r\n        switch(number){\r\n            case '1': \r\n            case '2':\r\n                return <QuestionOneTwo questionNumber={number}/>;\r\n            case '3':\r\n                return <QuestionThree/>;\r\n            case '4':\r\n                return <QuestionFour/>;\r\n            default: \r\n            return '';\r\n        }\r\n      }\r\n    \r\n    return (\r\n        <>\r\n            <Header title={title} text={getText()}/>\r\n            <div className=\"container\">\r\n                {getQuestion()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\nimport Header from '../components/Header';\r\n\r\nconst NotFoundPage = () => (\r\n    <Header title=\"404: Page Not Found\" text=\"Could not find the page you are looking for.\"/>\r\n)\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomePage = () => (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center homepage\">\r\n        <h1 style={{fontSize: \"3.5rem\"}}className=\"font-weight-bold mb-2\">Hi!</h1>\r\n        <hr style={{border: \"0.5px solid #90909038\", width: \"30%\"}}/>\r\n        <p className=\"font-weight-bold\">Please find the answers to the task questions in the links above/below.</p>\r\n        <div>\r\n            <Link className=\"btn btn-dark mx-1\" to=\"/question/1\">Question 1</Link>\r\n            <Link className=\"btn btn-dark mx-1\" to=\"/question/2\">Question 2</Link>\r\n            <Link className=\"btn btn-dark mx-1\" to=\"/question/3\">Question 3</Link>\r\n            <Link className=\"btn btn-dark mx-1\" to=\"/question/4\">Question 4</Link>\r\n        </div>\r\n    </div>   \r\n)\r\nexport default HomePage;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Question from './pages/Question';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport HomePage from './pages/HomePage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <div id=\"page-body\">\r\n          <Switch>\r\n            <Route path='/' component ={HomePage} exact/>\r\n            <Route path='/question/:number' component={Question} />\r\n            <Route component={NotFoundPage}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from'jquery';\r\nimport Popper from'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './store/store';\r\nimport './index.css';\r\nimport App from'./App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore()}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}